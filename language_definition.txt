PROGRAM = { ( "func" FUNCTION ) | ("declare" VAR_DECLARATION ) } .

STATEMENT_BLOCK = "{" { ("declare" DECLARATION) | ( EXPRESSION ";") | ( "if" "(" EXPRESSION ")" STATEMENT_BLOCK { "elsif" "(" EXPRESSION ")" STATEMENT_BLOCK } [ "else" STATEMENT_BLOCK ] ) | ( "while" "(" EXPRESSION ")" STATEMENT_BLOCK ) | ( "SET" NAME "=" EXPRESSION ";" ) } "}" .

FUNCTION = ( TYPE | "void" ) NAME "(" [ VAR_DECLARATION { "," VAR_DECLARATION } ] ")" STATEMENT_BLOCK .
VAR_DECLARATION = TYPE NAME .
DECLARATION = TYPE NAME [ "=" EXPRESSION ] { "," NAME [ "=" EXPRESSION ] } ";" .

EXPRESSION = ( "(" EXPRESSION ")" ) | ( ( "!" | "--" | "++" ) EXPRESSION ) | ( ( ( NAME [ ( "(" [ EXPRESSION { "," EXPRESSION } ] ")") | ( "[" EXPRESSION "]"  )  ] ) | NUMBER ) [ ("==" | ">" | ">=" | "<" | "<=" | "+" | "-" | "*" | "/" | "%" | "&&" | "||") EXPRESSION ] ) .


TYPE = ( "int" | "char" ) [ "[" NUMBER "]" ] .
NAME = ( LETTER | "_" ) { ALPHANUMERIC_CHAR } .
NUMBER = NUMERIC_CHAR { NUMERIC_CHAR } .
